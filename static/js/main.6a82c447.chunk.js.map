{"version":3,"sources":["vars/drawerItems.js","components/Home.js","components/sub/SkillGridItems.js","vars/skillItems.js","components/Skills.js","vars/projectItems.js","components/sub/ProjectGridItems.js","components/Projects.js","components/sub/SocialLinks.js","vars/contactItems.js","components/Contact.js","components/Routes.js","components/sub/ListItemLink.js","components/sub/ListItemLinkShorthand.js","components/ScrollToTop.js","components/ClippedDrawer.js","App.js","serviceWorker.js","index.js","vars/homeItems.js"],"names":["upperItems","myName","icon","react_default","a","createElement","Home_default","to","Settings_default","Work_default","Contacts_default","lowerItems","URL","style","avatar","height","width","marginTop","detailsGrid","padding","divider","title","color","fontSize","subtitle","details","margin","withStyles","theme","root","flexGrow","props","Grid_default","container","direction","Paper","justify","alignItems","Avatar_default","alt","src","myImageLink","Typography_default","myOccupation","Divider_Divider","myDetails","styles","subHeader","marginBottom","paper","tile","img","maxWidth","maxHeight","position","objectFit","mtb","classes","name","list","margins","Paper_default","GridList_default","cols","GridListTile_default","key","ListSubheader_default","component","map","index","logo","GridListTileBar_default","languages","frameworks","others","sub_SkillGridItems","webApps","link","icons","url","fill","d","getIcon","i","length","match","actionIcon","IconButton_default","target","href","SvgIcon_default","sub_ProjectGridItems","startsWith","socialLinks","Typography_Typography","sub_SocialLinks","Routes","es","atEnter","opacity","atLeave","atActive","className","Route","path","Home","exact","Skills","Works","Contact","newSyles","selectedButton","borderBottomRightRadius","borderTopRightRadius","backgroundColor","selectedIcon","selectedText","ListItemLink","renderLink","itemProps","Link","Object","assign","textDecoration","_this","_this$props","this","primary","setRoute","route","ListItem_default","button","onClick","ListItemIcon_default","ListItemText_default","disableTypography","Component","ScrollToTop","prevProps","location","pathname","window","scrollTo","children","withRouter","routes","display","appBar","zIndex","drawer","flexShrink","drawerPaper","content","spacing","unit","toolbar","mixins","lists","palette","background","listLink","toolbarText","toolbarIcon","marginRight","grow","_useState","useState","_useState2","slicedToArray","MemoryRouter","initialEntries","initialIndex","components_ScrollToTop","CssBaseline_default","AppBar_default","Toolbar_default","variant","noWrap","Drawer_default","List_default","item","sub_ListItemLink","Divider_default","fontStyle","sub_ListItemLinkShorthand","components_Routes","createMuiTheme","typography","useNextVariants","fontFamily","App","components_ClippedDrawer","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6a82c447.chunk.js","sourcesContent":["import React from \"react\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\n\r\nexport var upperItems = [\r\n    {\r\n        myName: 'Home',\r\n        icon: <HomeIcon/>,\r\n        to: '/'\r\n    },\r\n    // {\r\n    //     myName: 'About',\r\n    //     icon: <InfoIcon/>\r\n    // },\r\n    {\r\n        myName: 'Skills',\r\n        icon: <SettingsIcon/>,\r\n        to: '/skills'\r\n    },\r\n    {\r\n        myName: 'Projects',\r\n        icon: <WorkIcon/>,\r\n        to: '/projects'\r\n    },\r\n    {\r\n        myName: 'Contact',\r\n        icon: <ContactsIcon/>,\r\n        to: '/contact'\r\n    },\r\n]\r\n\r\nexport const lowerItems = [\r\n    \r\n    {\r\n        myName: 'Facebook',\r\n        URL: 'https://www.facebook.com/sifathaider.jamali.3'\r\n    },\r\n    \r\n\r\n]","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\r\nimport {myDetails, myName, myOccupation, myImageLink} from './../vars/homeItems'\r\n\r\nconst size = 200;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n});\r\n\r\nconst style = {\r\n    avatar: {height: size, width: size, marginTop: 32},\r\n    detailsGrid: {\r\n        padding: 24\r\n    },\r\n    divider: {\r\n        width: '100%',\r\n        height: 2\r\n    },\r\n    title: {\r\n        color: '#212121',\r\n        fontSize: 24\r\n    },\r\n    subtitle: {\r\n        color: '#757575',\r\n        fontSize: 18\r\n    },\r\n    details: {\r\n        color: '#212121',\r\n        fontSize: 18,\r\n        margin: 24\r\n    }\r\n};\r\n\r\nconst Home = (props) => (\r\n    <Grid container\r\n          direction=\"column\">\r\n        <Paper>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\">\r\n\r\n                <Avatar alt={myName} src={myImageLink}\r\n                        style={style.avatar}/>\r\n\r\n                <Grid container\r\n                      direction=\"column\"\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      style={style.detailsGrid}\r\n                >\r\n                    <Typography style={style.title}>\r\n                        {myName}\r\n                    </Typography>\r\n\r\n                    <Typography style={style.subtitle}>\r\n                        {myOccupation}\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Divider style={style.divider}/>\r\n\r\n            </Grid>\r\n\r\n            <Typography style={style.details}>\r\n                {myDetails}\r\n            </Typography>\r\n        </Paper>\r\n    </Grid>\r\n);\r\n\r\nHome.propTypes = {};\r\n\r\nexport default withStyles(styles)(Home);","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport GridList from \"@material-ui/core/GridList/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\r\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\r\n\r\n\r\nconst styles = {\r\n    subHeader: {\r\n        color: '#212121',\r\n        fontSize: 18\r\n    },\r\n    divider: {\r\n        marginBottom: 32\r\n    },\r\n    paper: {\r\n        margin: 0\r\n    },\r\n    tile: {\r\n        padding: 16\r\n    },\r\n    img: {\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        position: 'relative',\r\n        objectFit: 'contain'\r\n    },\r\n};\r\n\r\nconst mtb = [\r\n    {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    {\r\n        marginTop: 16,\r\n        marginBottom: 0,\r\n    },\r\n    {\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n    },\r\n\r\n]\r\n\r\nconst SkillGridItems = (props) => {\r\n    const {classes, name, list, margins} = props;\r\n\r\n    return (\r\n        <Paper style={mtb[margins]}>\r\n            <GridList cols={5} style={styles.tile}>\r\n                <GridListTile key=\"Subheader\" cols={5} style={{height: 'auto'}}>\r\n                    <ListSubheader\r\n                        style={styles.subHeader}\r\n                        component=\"div\">{name}</ListSubheader>\r\n\r\n                    <Divider style={styles.divider}/>\r\n                </GridListTile>\r\n\r\n                {\r\n                    list.map((tile, index) => (\r\n                        <GridListTile\r\n                            cols={1}\r\n                            key={index}\r\n                        >\r\n                            <img style={styles.img}\r\n                                 src={tile.logo} alt={tile.title}/>\r\n\r\n                            <GridListTileBar\r\n                                title={tile.title}\r\n                            />\r\n\r\n                        </GridListTile>\r\n                    ))\r\n                }\r\n\r\n            </GridList>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nSkillGridItems.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    list: PropTypes.array.isRequired,\r\n    marginTop: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SkillGridItems);","\r\nexport var languages = [\r\n    {\r\n        title: 'C',\r\n        logo: 'https://i.imgur.com/RFLeRPN.png',\r\n    },\r\n    {\r\n        title: 'C++',\r\n        logo: 'https://i.imgur.com/h6oG681.png',\r\n    },\r\n    {\r\n        title: 'Java',\r\n        logo: 'https://i.imgur.com/ixBZMFs.jpg',\r\n    },\r\n    {\r\n        title: 'C#',\r\n        logo: 'https://i.imgur.com/y7lj0sG.jpg',\r\n    },\r\n    {\r\n        title: 'Python',\r\n        logo: 'https://i.imgur.com/RfFOnUZ.jpg',\r\n    },\r\n    {\r\n        title: 'JavaScript',\r\n        logo: 'https://i.imgur.com/Noaipjm.jpg',\r\n    },\r\n    {\r\n        title: 'SQL',\r\n        logo: 'https://www.svgrepo.com/show/255832/sql.svg',\r\n    },\r\n    {\r\n        title: 'Php',\r\n        logo: 'https://i.imgur.com/YB4ML3d.png'\r\n    },\r\n    {\r\n        title: 'HTML',\r\n        logo: 'https://i.imgur.com/TjC9RcW.jpg',\r\n    },\r\n    {\r\n        title: 'CSS',\r\n        logo: 'https://i.imgur.com/MonyN4D.png',\r\n    },\r\n    \r\n\r\n\r\n]\r\n\r\nexport var frameworks = [\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    {\r\n        title: 'Dot Net',\r\n        logo: 'https://i.imgur.com/aOtVNQT.png'\r\n    },\r\n\r\n    {\r\n        title: 'Entity Framework',\r\n        logo: 'https://i.imgur.com/BqPhrvc.png'\r\n    },\r\n\r\n    {\r\n        title: 'Identity Framework',\r\n        logo: 'https://i.imgur.com/1ZXLU0r.jpg'\r\n    },\r\n    \r\n    {\r\n        title: 'Laravel',\r\n        logo: 'https://i.imgur.com/jnHiV5p.png'\r\n    },\r\n\r\n    {\r\n        title: 'MySql',\r\n        logo: 'https://i.imgur.com/mguYHnW.png'\r\n    },\r\n\r\n    {\r\n        title: 'MS SQL Server',\r\n        logo: 'https://i.imgur.com/sJjzVBC.jpg'\r\n    },\r\n\r\n    {\r\n        title: 'Bootstrap',\r\n        logo: 'https://upload.wikimedia.org/wikipedia/commons/e/ea/Boostrap_logo.svg'\r\n    },\r\n    \r\n    \r\n\r\n]\r\n\r\nexport var others = [\r\n    {\r\n        title: 'Git',\r\n        logo: 'https://i.imgur.com/06Qz2YA.png'\r\n    },\r\n    {\r\n        title: 'GitHub',\r\n        logo: 'https://i.imgur.com/9TiB9UR.jpg'\r\n    },\r\n    \r\n    {\r\n        title: 'IntelliJ IDA',\r\n        logo: 'https://www.jetbrains.com/company/brand/img/jb-logo-with-grid.svg'\r\n    },\r\n    {\r\n        title: 'Visual Studio',\r\n        logo: 'https://i.imgur.com/64Z5t6n.jpg'\r\n    },\r\n    {\r\n        title: 'VS Code',\r\n        logo: 'https://cdn.worldvectorlogo.com/logos/visual-studio-code.svg'\r\n    },\r\n\r\n    {\r\n        title: 'Sublime',\r\n        logo: 'https://i.imgur.com/NUcKwgX.png'\r\n    },\r\n    \r\n\r\n]","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport SkillGridItems from \"./sub/SkillGridItems\";\r\nimport {frameworks, languages, others} from '../vars/skillItems'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst Skills = (props) => (\r\n    <Grid>\r\n        <SkillGridItems name='Programming/Markup Languages' list={languages} margins={0}/>\r\n        <SkillGridItems name='Libraries/Frameworks' list={frameworks} margins={1}/>\r\n        <SkillGridItems name='Others' list={others} margins={2}/>\r\n    </Grid>\r\n);\r\n\r\nSkills.propTypes = {};\r\n\r\nexport default withStyles(styles)(Skills);","import React from \"react\";\r\n\r\n\r\n\r\nexport var webApps = [\r\n    \r\n    {\r\n        title: 'University Course and Result Management System',\r\n        logo: 'https://i.imgur.com/MCp6DOl.png',\r\n        subtitle: 'Created using C#, ASP.Net, MVC, jquery, Bootstrap',\r\n        link: 'https://github.com/p32929/Electron-Pomotodo'\r\n    },\r\n    {\r\n        title: 'Stock Management System',\r\n        logo: 'https://i.imgur.com/MCp6DOl.png',\r\n        subtitle: 'Created using C#, .Net, MS SQL',\r\n        link: 'https://github.com/p32929/Electron-Pomotodo'\r\n    },\r\n    {\r\n        title: 'Video Rental App',\r\n        logo: 'https://i.imgur.com/MCp6DOl.png',\r\n        subtitle: 'Created using C#, .Net, MVC, Entity Framework, Identity Framework, jquery, Bootstrap',\r\n        link: 'https://github.com/p32929/Electron-Pomotodo'\r\n    },\r\n    {\r\n        title: 'Transport Management System',\r\n        logo: 'https://i.imgur.com/MCp6DOl.png',\r\n        subtitle: 'Created using PHP',\r\n        link: 'https://github.com/p32929/Electron-Pomotodo'\r\n    },\r\n]\r\n\r\n\r\n\r\nexport var icons = [\r\n    \r\n    {\r\n        url: 'github',\r\n        icon: <path fill=\"#FFF\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\r\n    },\r\n    {\r\n        url: '',\r\n        icon: <path fill=\"#FFF\" d=\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\" />\r\n    }\r\n\r\n]","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport GridList from \"@material-ui/core/GridList/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\r\nimport {icons} from '../../vars/projectItems'\r\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\r\n\r\nfunction getIcon(url) {\r\n    var index = 0;\r\n    for (var i = 0; i < icons.length; i++) {\r\n        if (url.match(icons[i].url)) {\r\n            index = i;\r\n            break;\r\n        }\r\n    }\r\n    return icons[index].icon;\r\n}\r\n\r\nconst styles = {\r\n    paper: {\r\n        margin: 0\r\n    },\r\n    subHeader: {\r\n        color: '#212121',\r\n        fontSize: 18\r\n    },\r\n    icon: {\r\n        color: '#FFF'\r\n    },\r\n    divider: {\r\n        marginBottom: 32\r\n    },\r\n    tile: {\r\n        padding: 16\r\n    },\r\n    img: {\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        position: 'relative',\r\n        objectFit: 'contain'\r\n    },\r\n};\r\n\r\nconst mtb = [\r\n    {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    {\r\n        marginTop: 16,\r\n        marginBottom: 0,\r\n    },\r\n    {\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n    },\r\n\r\n]\r\n\r\nconst ProjectGridItems = (props) => {\r\n    const {classes, name, list, margins} = props;\r\n    return (\r\n        <Paper\r\n            style={mtb[margins]}>\r\n            <GridList cols={4} style={styles.tile}>\r\n                <GridListTile key=\"Subheader\" cols={4} style={{height: 'auto'}}>\r\n                    <ListSubheader\r\n                        style={styles.subHeader}\r\n                        component=\"div\">{name}</ListSubheader>\r\n\r\n                    <Divider style={styles.divider}/>\r\n\r\n                </GridListTile>\r\n\r\n                {\r\n                    list.map((tile, index) => (\r\n                        <GridListTile\r\n                            key={index}\r\n                            cols={1}>\r\n\r\n                            <img\r\n                                style={styles.img}\r\n                                src={tile.logo} alt={tile.title}/>\r\n\r\n                            <GridListTileBar\r\n                                title={tile.title}\r\n                                subtitle={tile.subtitle}\r\n                                actionIcon={\r\n                                    <IconButton style={styles.icon}\r\n                                                target=\"_blank\"\r\n                                                href={tile.link}>\r\n                                        <SvgIcon style={styles.icon}>\r\n                                            {getIcon(tile.link)}\r\n                                        </SvgIcon>\r\n                                    </IconButton>\r\n                                }/>\r\n\r\n                        </GridListTile>\r\n                    ))\r\n                }\r\n\r\n            </GridList>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nProjectGridItems.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    list: PropTypes.array.isRequired,\r\n    marginTop: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ProjectGridItems);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport WorksGridItems from \"./sub/ProjectGridItems\";\r\nimport {androidApps, androidLibs, desktopApps, NDAs, others, webApps} from '../vars/projectItems'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst Projects = (props) => (\r\n    <Grid>\r\n        \r\n        <WorksGridItems name='Web Apps' list={webApps} margins={1}/>\r\n        \r\n    </Grid>\r\n);\r\n\r\nProjects.propTypes = {};\r\n\r\nexport default withStyles(styles)(Projects);","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport GridList from \"@material-ui/core/GridList/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\r\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\r\nimport {icons} from \"../../vars/projectItems\";\r\n\r\nfunction getIcon(url) {\r\n    var index = 2;\r\n    for (var i = 0; i < icons.length; i++) {\r\n        if (url.startsWith(icons[i].url)) {\r\n            index = i;\r\n            break;\r\n        }\r\n    }\r\n    return icons[index].icon;\r\n}\r\n\r\nconst styles = {\r\n    subHeader: {\r\n        color: '#212121',\r\n        fontSize: 18\r\n    },\r\n    icon: {\r\n        color: '#FFF'\r\n    },\r\n    divider: {\r\n        marginBottom: 32\r\n    },\r\n    tile: {\r\n        padding: 16\r\n    },\r\n    img: {\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        position: 'relative',\r\n        objectFit: 'contain'\r\n    },\r\n};\r\n\r\nconst SocialLinks = (props) => {\r\n    const {classes, name, list, marginTop} = props;\r\n\r\n    return (\r\n        <Paper\r\n            style={{marginTop: marginTop}}>\r\n            <GridList cols={3} style={styles.tile}>\r\n                <GridListTile key=\"Subheader\" cols={3} style={{height: 'auto'}}>\r\n                    <ListSubheader\r\n                        style={styles.subHeader}\r\n                        component=\"div\">{name}</ListSubheader>\r\n\r\n                    <Divider style={styles.divider}/>\r\n\r\n                </GridListTile>\r\n\r\n                {\r\n                    list.map((tile, index) => (\r\n                        <GridListTile\r\n                            key={index}\r\n                            cols={1}>\r\n\r\n                            <img\r\n                                style={styles.img}\r\n                                src={tile.logo} alt={tile.title}/>\r\n\r\n                            <GridListTileBar\r\n                                title={tile.title}\r\n                                subtitle={tile.link}\r\n                                actionIcon={\r\n                                    <IconButton style={styles.icon}\r\n                                                target=\"_blank\"\r\n                                                href={tile.link}>\r\n\r\n                                        {\r\n                                            tile.link.startsWith('https') ?\r\n                                                <SvgIcon style={styles.icon}>\r\n                                                    <path fill=\"#FFF\"\r\n                                                          d=\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\"/>\r\n                                                </SvgIcon> : null\r\n                                        }\r\n                                    </IconButton>\r\n                                }/>\r\n\r\n                        </GridListTile>\r\n                    ))\r\n                }\r\n\r\n            </GridList>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nSocialLinks.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    list: PropTypes.array.isRequired,\r\n    marginTop: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SocialLinks);","export var email = 'sifathaiderjamali@gmail.com'\r\n\r\nexport var socialLinks = [\r\n  \r\n    {\r\n        title: 'Skype',\r\n        logo: 'https://image.flaticon.com/icons/svg/174/174869.svg',\r\n        link: 'live:aligetorking'\r\n    },\r\n    {\r\n        title: 'WhatApp',\r\n        logo: 'https://image.flaticon.com/icons/svg/174/174879.svg',\r\n        link: 'https://api.whatsapp.com/send?phone=8801914331415'\r\n    },\r\n    {\r\n        title: 'LinkedIn',\r\n        logo: 'https://image.flaticon.com/icons/svg/174/174857.svg',\r\n        link: 'https://www.linkedin.com/in/sifat-hiader-jamali-203500156/'\r\n    },\r\n    \r\n\r\n]\r\n\r\nexport var bottom1stTest = '';\r\nexport var bottom2ndText = '';","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\r\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\r\nimport SocialLinks from \"./sub/SocialLinks\";\r\nimport {email, socialLinks, bottom1stTest, bottom2ndText} from '../vars/contactItems'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst Contact = (props) => (\r\n    <Grid>\r\n        <Paper style={{padding: 16}}>\r\n            Contact me via Email\r\n            <Typography>\r\n                {email}\r\n            </Typography>\r\n        </Paper>\r\n\r\n        <SocialLinks name='My Other Social Links' list={socialLinks} marginTop={16}/>\r\n\r\n        <Paper style={{padding: 16, marginTop: 16, marginBottom: 16}}>\r\n            {bottom1stTest}\r\n            <Typography>\r\n                {bottom2ndText}\r\n            </Typography>\r\n        </Paper>\r\n\r\n    </Grid>\r\n);\r\n\r\nContact.propTypes = {};\r\n\r\nexport default withStyles(styles)(Contact);","import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport Home from \"./Home\";\r\nimport Skills from \"./Skills\";\r\nimport Works from \"./Projects\";\r\nimport Contact from \"./Contact\";\r\nimport {AnimatedSwitch} from 'react-router-transition';\r\n\r\n\r\nconst Routes = (props) => (\r\n    <AnimatedSwitch\r\n        atEnter={{ opacity: 0 }}\r\n        atLeave={{ opacity: 0 }}\r\n        atActive={{ opacity: 1 }}\r\n        className=\"switch-wrapper\">\r\n        <Route path='/' component={Home} exact={true}/>\r\n        <Route path='/skills' component={Skills}/>\r\n        <Route path='/projects' component={Works}/>\r\n        <Route path='/contact' component={Contact}/>\r\n    </AnimatedSwitch>\r\n);\r\n\r\nexport default Routes;\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst newSyles = {\r\n    selectedButton: {\r\n        borderBottomRightRadius: 10,\r\n        borderTopRightRadius: 10,\r\n        backgroundColor: '#4CAF50',\r\n    },\r\n    selectedIcon: {\r\n        color: '#FFF'\r\n    },\r\n    selectedText: {\r\n        color: '#FFFFFF',\r\n    },\r\n}\r\n\r\nclass ListItemLink extends Component {\r\n    renderLink = itemProps => <Link style={{textDecoration: 'none'}}\r\n                                    to={this.props.to} {...itemProps} />;\r\n\r\n    render() {\r\n        const {icon, primary, setRoute, index, route} = this.props;\r\n        return (\r\n            <ListItem\r\n                style={route == index ? newSyles.selectedButton : null}\r\n                button\r\n                onClick={() => {\r\n                    setRoute(index)\r\n                }}\r\n                component={this.renderLink}>\r\n                <ListItemIcon\r\n                    style={route == index ? newSyles.selectedIcon : null}\r\n                >{icon}</ListItemIcon>\r\n                <ListItemText\r\n                    disableTypography\r\n                    style={route == index ? newSyles.selectedText : null}\r\n                    primary={primary}/>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nListItemLink.propTypes = {\r\n    icon: PropTypes.element.isRequired,\r\n    primary: PropTypes.node.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ListItemLink);","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nfunction ListItemLinkShorthand(props) {\r\n    const {primary, to} = props;\r\n    return (\r\n        <ListItem target=\"_blank\" style={{textDecoration: 'none'}} component='a' href={to} button>\r\n            <ListItemText primary={primary}/>\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nListItemLinkShorthand.propTypes = {\r\n    primary: PropTypes.node.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ListItemLinkShorthand);","import React, {Component} from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.pathname !== prevProps.location.pathname) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {lowerItems, upperItems} from './../vars/drawerItems'\r\nimport {MemoryRouter} from 'react-router-dom'\r\nimport Routes from \"./Routes\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\r\nimport ListItemLink from \"./sub/ListItemLink\";\r\nimport ListItemLinkShorthand from \"./sub/ListItemLinkShorthand\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: '#4CAF50'\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    lists: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    listLink: {\r\n        textDecoration: 'none'\r\n    },\r\n    toolbarText: {\r\n        flexGrow: 1,\r\n        color: \"#FFF\"\r\n    },\r\n    toolbarIcon: {\r\n        marginRight: 16\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\nconst routes = [\r\n    '/',\r\n    '/skills',\r\n    '/projects',\r\n    '/contact',\r\n]\r\n\r\nfunction ClippedDrawer(props) {\r\n    const {classes} = props;\r\n    const [route, setRoute] = useState(0)\r\n\r\n    return (\r\n        <MemoryRouter\r\n            initialEntries={routes}\r\n            initialIndex={0}>\r\n            <ScrollToTop>\r\n                <div className={classes.root}>\r\n                    <CssBaseline/>\r\n                    <AppBar position=\"fixed\" className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.grow}>\r\n                                Sifat Haider Jamali\r\n                            </Typography>\r\n\r\n                            <IconButton\r\n                                href=\"https://github.com/sejan-jamali\"\r\n                                color=\"inherit\">\r\n                                <SvgIcon>\r\n                                    <path\r\n                                        d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"/>\r\n                                </SvgIcon>\r\n                            </IconButton>\r\n\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.toolbar}/>\r\n\r\n                        <div className={classes.lists}>\r\n                            <List>\r\n                                {\r\n                                    upperItems.map((item, index) => (\r\n                                        <ListItemLink route={route} index={index} setRoute={setRoute} key={index} to={item.to} primary={item.myName} icon={item.icon}/>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                            <Divider style={{marginTop: 16}}/>\r\n\r\n                            <Typography style={{color: '#212121', margin: 16, fontSize: 18, fontStyle: 'italic'}}>\r\n                                My Social Links\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n\r\n                            <List>\r\n                                {\r\n                                    lowerItems.map((item, index) => (\r\n                                        <ListItemLinkShorthand key={index} primary={item.myName} to={item.URL}/>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                        </div>\r\n\r\n                    </Drawer>\r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar}/>\r\n\r\n                        <Routes/>\r\n\r\n                    </main>\r\n                </div>\r\n            </ScrollToTop>\r\n        </MemoryRouter>\r\n    );\r\n}\r\n\r\nClippedDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ClippedDrawer);","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport ClippedDrawer from \"./components/ClippedDrawer\";\r\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n        fontFamily: 'Muli',\r\n    },\r\n});\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <ClippedDrawer/>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","var myName = 'S.M Sifat Haider Jamali'\r\nvar myOccupation = 'Software Developer'\r\nvar myDetails = 'Hello, I am Sifat Haider Jamali. I love Programming, making application/software for Mobile, Web and Desktop. I have a professional certificate in Dot Net Development.\\nI I love work in OOP. I learned C, C++, Java, C#, Python, JavaScript, PHP. Worked in so many libraries & frameworks like .Net(one of my favorites), Laravel, worked using technologies like Git, Arduino, etc. Always forward to improve myself. One of my favorite quote is \"earn to learn\"'\r\nvar myImageLink = \"https://i.imgur.com/5t7rVR4.png\"\r\n\r\nmodule.exports = {\r\n    myName, myOccupation, myDetails, myImageLink\r\n}"],"sourceRoot":""}